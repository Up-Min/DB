
-- ABS, SIGN, ROUND, TRUNC, CEIL, FLOOD, MOD
SELECT ABS(-1) FROM DUAL; -- ABS : 절대값을 가져온다
SELECT SIGN (-50) FROM DUAL; -- SIGN : 부호를 가져온다.
-- 음수일경우 -1, 양수일경우 1, 0일경우 0을 가져온다.
SELECT ROUND (165.432,1) FROM DUAL; -- ROUND : 반올림 지정 (165.432, 1) - 1번째 자리수만 남김
-- TRUNC (165.432,1) : 165.4 까지만 나타내고 나머지는 다 버림
-- CEIL(165.432) : 166. 소수점을 다 버리고 무조건 올림
-- FLOOR (165.432) : 165. 소수점을 다 버리고 무조건 내림
-- MOD (165,7) : 165를 7로 나눈 값의 나머지를 반환함.
-- 2번째 값이 0일 경우 1번값이 그대로 리턴 됨.

-- 날짜 (EXTRACT, ADD_MONTHS)
-- SELECT EXTRACT (가져올 단위 FROM 컬럼명) FROM 가져올 테이블 명
SELECT EXTRACT (MONTH FROM SYSDATE) FROM DUAL;
-- SELECT ADD_MONTHS (날짜, +-할 날짜) FROM 가져올 테이블 명
SELECT ADD_MONTHS(SYSDATE,+1) FROM DUAL;

-- 명시적 형변환 함수 (TO_NUMBER, TO_CHAR, TO_DATE)
SELECT TO_NUMBER ('1234') FROM DUAL;
SELECT TO_CHAR('AAAA') FROM DUAL;
SELECT TO_DATE('2022-12-08', 'YYYY-MM-DD') FROM DUAL;

-- NULL 관련 함수 (NVL, NULLIF, COALESCE)

--DECODE, CASE (IF, ELSE IF에 대응하는!)
SELECT ID, DECODE (ID, 1, 'BLUE') FROM CUSTOMER;
SELECT ID,
    CASE WHEN ID = 1 THEN 'BLUE'
    ELSE 'WHITE'
    END
    FROM CUSTOMER;
-- 기본키 /  외래키 (PK, FK - 부모자식!)
 -- FK 지정
--  CONSTRAINT FK_DEPT_NO FOREIGN KEY(DEPT_NO) REFERENCES DEPT(DEPT_NO); 
-- INNER, EQUI, FULL OUTER, LEFT OUTER, RIGHT OUTER JOIN
SELECT * FROM ACADEMY_A A1 JOIN ACADEMY_B B1 ON (A1.STUDENT_NO = B1.STUDENT_NO);
SELECT * FROM ACADEMY_A A1, ACADEMY_B B1 WHERE A1.STUDENT_NO = B1.STUDENT_NO;

--집합연산자 UNION ALL, UNION, INTERSECT, MINUS

 -- 스칼라 서브쿼리 (SELECT안에 또 SELECT)
SELECT T1.STUDENT_NO,
(SELECT T2.STUDENT_NAME FROM ACADEMY_B T2 WHERE T1.STUDENT_NO = T2.STUDENT_NO)
FROM ACADEMY_A T1;
-- 원래는 셀렉트로 두개의 컬럼을 가져오는데, 뒤에 들어올 컬럼을
-- SELECT를 이용하여 한번 더 걸러준다는 느낌으로 사용함! 

 --인라인 뷰 (FROM 안에 SELECT)
 SELECT T1.STUDENT_NO, T2.STUDENT_NAME
 FROM ACADEMY_A T1, 
 (SELECT STUDENT_NO, STUDENT_NAME FROM ACADEMY_B)T2
 WHERE T1.STUDENT_NO = T2.STUDENT_NO;